For this lab we had to run ESXi from dual boot because Microsoft's Hyper-V would not allow virtualization of ESXi without turning of memory protection.

As a work around we are dual-booting from our machine and will load ESXi onto an internal hard-drive picked up the day before. 

We used Ventoy that had ESXi installed but when we finished installing, ESXi did not detect a network card. We had to find a way to get ESXi to recognize our ethernet card (RealTek PCIe GbE Family Controller) so we had to build a customized script that allowed us to inject our ethernet card into the default iso. 
So hopefully, the next install, it will recognize the ehternet card and we will be good to go.

From Reddit it looks like the flings.vmware file needed to make the customizable file was removed during the acquisition of VMWare by Broadcom. Fortunately, there were some links provided to the archival site with the .zip file

Website: 
https://archive.org/download/flings.vmware.com/Flings/Community%20Networking%20Driver%20for%20ESXi/

File:
###Net-Community-Driver_1.2.7.0-1vmw.700.1.0.15843807_19480755.zip

From ChatGPT
Problem: 

Since your installer already failed to detect the NIC, once you have the ZIP I can write you a ready-to-run PowerCLI script that:

Imports the stock ESXi ISO
Injects the Realtek driver
Exports a new Custom-ESXi.iso

Create a folder:
So your folder should look like:
VMware-ESXi-8.0.0.iso (the stock installer ISO)
net-community-driver-xxxxxx.zip (the driver bundle, untouched)

## Next Step

If you’re ready, I’ll give you a PowerCLI script that:

Imports the ESXi ISO.
Imports the driver ZIP.
Creates a new image profile.
Injects the driver.
Exports a new Custom-ESXi.iso.

How to Get PowerCLI
Open Windows PowerShell as Administrator.
Run:

Install-Module -Name VMware.PowerCLI -Scope CurrentUser

If it asks about NuGet provider or trusting the repository, type Y and press Enter.

This installs the PowerCLI cmdlets you’ll use:

Add-EsxSoftwareDepot
New-EsxImageProfile
Add-EsxSoftwarePackage
Export-EsxImageProfile

After installation, type:

Get-Module -ListAvailable VMware.PowerCLI

We got an execution policy error:
By default, Windows blocks running certain scripts (like PowerCLI modules) unless you relax the execution policy.
Set-ExecutionPolicy RemoteSigned -Scope CurrentUser

Import-Module VMware.ImageBuilder

## Code to custom build ESXi ISO Script
 *We got an error that ImageBuilder modules relies on Python so we need to install and register it with PowerCLI*
Download from python.org
Choose a version between 3.7.1 and 3.12 (I recommend 3.10.x for stability).
During install, check ✅ “Add Python to PATH”.
Install with Admin privileges


tell PowerCLI where to find it:
Set-PowerCLIConfiguration -Scope User -PythonPath "C:\Users\jonat\AppData\Local\Programs\Python\Python311\python.exe" -Confirm:$false


Kept getting errors so we downloaded Python 3.10 and changed the PATH

###Verify Python 3.10 is installed

Run:
py -0


## Option B: Update PATH manually

If the above doesn’t cover python directly:
Open Start → Edit the system environment variables.
Click Environment Variables.
Under System variables, find Path, click Edit.
Move the Python 3.10 path above the 3.11 path, e.g.:

C:\Users\jonat\AppData\Local\Programs\Python\Python310\
C:\Users\jonat\AppData\Local\Programs\Python\Python310\Scripts\

Restart PowerShell/Command Prompt.

Test with:

python --version

After some digging and understanding, I needed the offline bundle depot.zip file provided by Broadcom all along. Despite the acquistion and all thje changes, they're actually quite helpful and if this works, I'll feel like I've been treating Broadcom with ire just because it seems like everyone else has turned on them because the bought VMWare and changed everything up but in reality are surprisingly helpful.

Okay so I downloaded the zip:C:\ESXi-Custom-Homelab\VMware-ESXi-8.0U2d-24585300-depot.zip file and moved it into my C:\Windows\ESXi-Custom-Homelab directory where I have it, and ESXi-Custom-Homelab\Net-Community-Driver_1.2.7.0-1vmw.700.1.0.15843807_19480755.zip along with the ESXi installer iso.

I then got this script to run from ChatGPT:

$WorkDir   = "C:\ESXi-Custom-Homelab"
$DepotZip  = Join-Path $WorkDir "VMware-ESXi-8.0U2d-24585300-depot.zip"
$DriverZip = Join-Path $WorkDir "Net-Community-Driver_1.2.7.0-1vmw.700.1.0.15843807_19480755.zip"
$OutIso    = Join-Path $WorkDir "Custom-ESXi.iso"

cd $WorkDir
Import-Module VMware.ImageBuilder
Set-PowerCLIConfiguration -Scope User -ParticipateInCEIP:$false -Confirm:$false | Out-Null

# Add base ESXi depot + Realtek driver depot
Add-EsxSoftwareDepot $DepotZip
Add-EsxSoftwareDepot $DriverZip

# Pick first '-standard' profile as base
$base = (Get-EsxImageProfile | Where-Object { $_.Name -match 'standard' } | Select-Object -First 1).Name
$custom = "ESXi-8.0U2d-Custom-Realtek"

# Clone and add driver
New-EsxImageProfile -CloneProfile $base -Name $custom -Vendor "Homelab" | Out-Null
Add-EsxSoftwarePackage -ImageProfile $custom -SoftwarePackage net-community | Out-Null

# Export custom ISO
Export-EsxImageProfile -ImageProfile $custom -ExportToISO -FilePath $OutIso

Write-Host "`nDone. Custom ISO created at:" $OutIso

and it produced the iso Custom-ESXi.iso which I renamed to Custom-Homelab-ESXi.iso

Then we checked to verify that the Realtek driver (net-community) is included using this one-liner in Windows PowerShell 5.1:

(Get-EsxSoftwarePackage | Where-Object { $_.Name -like "net-community*" }) | Format-Table Name,Version

output:

Name          Version
----          -------
net-community 1.2.7.0-1vmw.700.1.0.15843807

### Note:
What Each File Does

Installer ISO is Bootable media to install ESXi.
You don’t technically need this once the custom ISO is built (the custom ISO replaces it).

Depot ZIP is Base ESXi “software depot” for ImageBuilder.

Community Driver ZIP Adds Realtek (and other) NIC drivers.

Now we will copy Custom-Homelab-ESXi.iso to our Ventoy USB amd boot from that and see if it recognizes our USB. 

UPDATE:

None of that worked!

Solution: Ordered a new Network interface card Intel I350 and installed 
ESXi was able to recognize and provided us with a list of disks to boot from

we are using ESXi 8.0.3

we're going to dedicate the entire 6 TB hard drive to ESXi
this way we won't have to worry about having to boot from a usb every time

we selected the 6 TB internal hard drive to install

password:password123!

F11 to confirm install

Get prompted to remove installation media before rebooting

once we reboot, we go into ESXi and in the boot menu we can see where ESXi has installed onto the 6 TB disk.

We select and see ESXi boot up

Once it koads, it shows us information on our computer and core processing power.

This is the DCUI (Direct Console User Interface)

To manage:
It gives us an IPv4 address given by DHCP (probably why we need the NIC)
https://192.168.1.14/
or
https://Honor-6/

F2 to customize
login
root:password123!

We go to configure management network 
(we got an ip from DHCP which will change in the future)

then Network Adapters
we see vmnic0 is disconnected and we are connected to vmnic1 for our management network

Then we go to IPv4 configuration
select "Set static IPv4 address and network configuration" (spacebar to select)
we'll keep using the 192.168.1.14
subnet mask: 255.255.255.0
default gateway: 192.168.1.1

IPv6
select space to disable 

DNS Server:

We will leave it as default but we will probably need to change this. When we set up our Windows Server Domain Controller, we made it the DNS server so can proabably use it when it is up and running again
We'll leave the hostname as Honor-6

We'll probably want to circle back around to DNS suffixes as well
(quick search show that these are like nicknames that hosts will try to resolve when they look for our FQDN)

Apply changes and reboot host

When we reboot we get the Hostname and IP address to use in krder to manage (We'll use the IP)

Since its a self- signed certificate we will get a warning > continue

We get the login screen for ESXi
root:password123!

and we get our ESXi Host Client Dashboard